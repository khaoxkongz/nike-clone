/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as CartRouteImport } from './routes/cart'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ShoesIndexRouteImport } from './routes/shoes.index'
import { Route as ShoesIdRouteImport } from './routes/shoes.$id'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const CartRoute = CartRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShoesIndexRoute = ShoesIndexRouteImport.update({
  id: '/shoes/',
  path: '/shoes/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShoesIdRoute = ShoesIdRouteImport.update({
  id: '/shoes/$id',
  path: '/shoes/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/shoes/$id': typeof ShoesIdRoute
  '/shoes': typeof ShoesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/shoes/$id': typeof ShoesIdRoute
  '/shoes': typeof ShoesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/shoes/$id': typeof ShoesIdRoute
  '/shoes/': typeof ShoesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cart' | '/profile' | '/register' | '/shoes/$id' | '/shoes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cart' | '/profile' | '/register' | '/shoes/$id' | '/shoes'
  id:
    | '__root__'
    | '/'
    | '/cart'
    | '/profile'
    | '/register'
    | '/shoes/$id'
    | '/shoes/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CartRoute: typeof CartRoute
  ProfileRoute: typeof ProfileRoute
  RegisterRoute: typeof RegisterRoute
  ShoesIdRoute: typeof ShoesIdRoute
  ShoesIndexRoute: typeof ShoesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shoes/': {
      id: '/shoes/'
      path: '/shoes'
      fullPath: '/shoes'
      preLoaderRoute: typeof ShoesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shoes/$id': {
      id: '/shoes/$id'
      path: '/shoes/$id'
      fullPath: '/shoes/$id'
      preLoaderRoute: typeof ShoesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CartRoute: CartRoute,
  ProfileRoute: ProfileRoute,
  RegisterRoute: RegisterRoute,
  ShoesIdRoute: ShoesIdRoute,
  ShoesIndexRoute: ShoesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
